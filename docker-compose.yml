version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_ADMIN_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_ADMIN_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3000}
      - DATABASE_SCHEMA=${DATABASE_SCHEMA}
      - DATABASE_WRITE_URL=postgres://${DB_WRITER_USER}:${DB_WRITER_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - DATABASE_READ_URL=postgres://${DB_READER_USER}:${DB_READER_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./settings.json:/app/settings.json
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "cd /app &&
             npm ci &&
             echo 'Creating simpler Vite config...' &&
             echo 'import { defineConfig } from \"vite\";
             import { resolve } from \"path\";
             export default defineConfig({
               resolve: {
                 alias: {
                   \"@config\": resolve(__dirname, \"./src/config\"),
                   \"@features\": resolve(__dirname, \"./src/features\"),
                   \"@auth\": resolve(__dirname, \"./src/features/authentication\"),
                   \"@user\": resolve(__dirname, \"./src/features/user\"),
                   \"@cache\": resolve(__dirname, \"./src/features/cache\"),
                   \"@logging\": resolve(__dirname, \"./src/features/logging\"),
                   \"@security\": resolve(__dirname, \"./src/features/security\"),
                   \"@web\": resolve(__dirname, \"./src/features/web-server\"),
                   \"@test\": resolve(__dirname, \"./src/test\"),
                   \"@\": resolve(__dirname, \"./src\")
                 }
               },
               build: {
                 outDir: \"dist\",
                 ssr: true,
                 minify: false,
                 sourcemap: true,
                 emptyOutDir: true,
                 rollupOptions: {
                   input: \"src/index.ts\",
                   output: {
                     format: \"esm\",
                     entryFileNames: \"[name].js\",
                     inlineDynamicImports: true
                   },
                   external: [
                     \"fastify\", \"pino\", \"jsonwebtoken\", \"bcrypt\", \"uuid\", \"fs\", \"path\", \"url\"
                   ]
                 }
               }
             });' > vite.config.js &&
             echo 'Building with Vite...' &&
             npx vite build &&
             echo 'Starting application...' &&
             node --trace-warnings dist/index.js"
    restart: unless-stopped

volumes:
  postgres_data:
